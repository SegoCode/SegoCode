name: Initialize repository

on:
  workflow_dispatch:

jobs:
  initialize_repo:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Setup git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh -y

      - name: Extract repository and username
        id: extract
        run: |
          REPO_NAME="${{ github.repository }}"
          USERNAME=$(echo $REPO_NAME | cut -d'/' -f1)
          REPO_NAME_ONLY=$(echo $REPO_NAME | cut -d'/' -f2)
          echo "username=$USERNAME" >> $GITHUB_OUTPUT
          echo "reponame=$REPO_NAME_ONLY" >> $GITHUB_OUTPUT

      - name: Set branch name
        id: vars
        run: echo "branch=initialize-repo-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Create develop branch if it doesn't exist
        run: |
          # Check if develop branch exists
          if ! git ls-remote --heads origin develop | grep develop; then
            echo "Creating develop branch from main..."
            git checkout -b develop
            git push -u origin develop
            git checkout main  # Return to main branch for the rest of the workflow
          else
            echo "Develop branch already exists."
          fi

      - name: Replace {reponame} and {username} with actual values in non-workflow files
        run: |
          REPO_NAME_ONLY="${{ steps.extract.outputs.reponame }}"
          USERNAME="${{ steps.extract.outputs.username }}"
          REPO_NAME_ESCAPED=$(echo $REPO_NAME_ONLY | sed 's/\//\\\//g')
          USERNAME_ESCAPED=$(echo $USERNAME | sed 's/\//\\\//g')
          
          # Modify all files except workflow files
          find . -type f -not -path "./.git/*" -not -path "./.github/workflows/*" -exec sed -i "s/{reponame}/$REPO_NAME_ESCAPED/g" {} \;
          find . -type f -not -path "./.git/*" -not -path "./.github/workflows/*" -exec sed -i "s/{username}/$USERNAME_ESCAPED/g" {} \;

      - name: Remove initializer workflow
        run: |
          rm -f .github/workflows/initializer.yml

      - name: Commit changes
        run: |
          BRANCH_NAME="${{ steps.vars.outputs.branch }}"
          git checkout -b $BRANCH_NAME
          
          # Exclude workflow files to avoid permission errors
          git add --all -- ':!.github/workflows'
          
          # Explicitly add the deletion of the initializer workflow
          git add .github/workflows/initializer.yml
          
          git commit -m "Initialize repository with repo name ${{ steps.extract.outputs.reponame }} and username ${{ steps.extract.outputs.username }}"
          git push origin HEAD:$BRANCH_NAME

      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BRANCH_NAME="${{ steps.vars.outputs.branch }}"
          PR_URL=$(gh pr create --base main --head $BRANCH_NAME --title "Initialize repository" --body "This PR initializes the repository with the actual repository name, with the actual username and removing the initializer workflow.")
          
          # Extract PR number from URL
          PR_NUMBER=$(basename $PR_URL)
          
          # Add any desired labels to the pull request
          # gh pr edit $PR_NUMBER --add-label "initialization"
